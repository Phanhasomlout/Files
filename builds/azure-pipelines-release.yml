trigger: none
pr: none

pool:
  vmImage: 'windows-latest'

parameters:
  - name: releaseBranch
    displayName: Release Branch
    type: string
    default: 'test'
    values:
    - 'test'
    - 'stable'
  - name: packageIdentityName
    displayName: Package Identity Name
    type: string
    default: 'FilesTest'
    values:
    - 'FilesTest'
    - 'Files'
  - name: packageDisplayName
    displayName: Package Display Name
    type: string
    default: 'Files (Test)'
    values:
    - 'Files (Test)'
    - 'Files'

variables:
- group: BuildPipelineVariables
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'x86|x64|arm64'
- name: buildConfiguration
  value: 'Release'
- name: sideloadBuildConfiguration
  value: 'Sideload'
- name: appxPackageDir
  value: '$(build.artifactStagingDirectory)\AppxPackages\\'

jobs:
### Sideload release ###
- job: SideloadRelease
  timeoutInMinutes: 120
  steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        [xml]$xmlDoc = Get-Content $(Build.SourcesDirectory)\src\Files.Package\Package.appxmanifest
        $xmlDoc.Package.Identity.Name="${{parameters.packageIdentityName}}"
        $xmlDoc.Package.Identity.Publisher="FilesTest"
        $xmlDoc.Package.Properties.DisplayName="${{parameters.packageDisplayName}}"
        $xmlDoc.Package.Applications.Application.VisualElements.DisplayName="${{parameters.packageDisplayName}}"
        $xmlDoc.Save('$(Build.SourcesDirectory)\src\Files.Package\Package.appxmanifest')
      failOnStderr: true

 # This replaces references to the dev icon with the regular release icon 
  - task: PowerShell@2
    displayName: 'Use Correct Logo'
    inputs:
      targetType: 'inline'
      script: |
        gci $(Build.SourcesDirectory)\src -Include *.csproj, *.appxmanifest, *.wapproj -recurse | ForEach -Process {
        (Get-Content $_ -Raw | ForEach -Process {$_ -replace "Assets\\AppTilesDev", "Assets\AppTiles"}) | Set-Content $_ -NoNewline
        }
      failOnStderr: true

  - task: DownloadSecureFile@1
    name: mapsDevKey
    displayName: 'Download Bing Maps Dev Key'
    inputs:
      secureFile: 'BingMapsKey.txt'

# Adds the Bing maps token to the project
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Agent.TempDirectory)'
      Contents: '$(mapsDevKey.secureFilePath)'
      TargetFolder: '$(Build.SourcesDirectory)\src\Files.Uwp\Resources'
      overWrite: true

  - task: DownloadSecureFile@1
    name: appCenterDevKey
    displayName: 'Download AppCenter Dev Key'
    inputs:
      secureFile: 'AppCenterKey.txt'

# Adds the AppCenter token to the project
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Agent.TempDirectory)'
      Contents: '$(appCenterDevKey.secureFilePath)'
      TargetFolder: '$(Build.SourcesDirectory)\src\Files.Uwp\Resources'
      overWrite: true

  - task: UseDotNet@2
    inputs:
      packageType: sdk
      version: 6.0.100

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      feedsToUse: config
      nugetConfigPath: nuget.config
      restoreSolution: '$(solution)'

  - task: DownloadSecureFile@1
    name: caCertificate
    displayName: 'Download CA certificate'
    inputs:
      secureFile: '$(signingCert.secureFilePath)'

  - task: MSBuild@1
    inputs:
      solution: '**/*.wapproj'
      platform: 'x86'
      configuration: '$(sideloadBuildConfiguration)'
      msbuildArguments: '/t:build;_GenerateAppxPackage /p:AppxLogTelemetryFromSideloadingScript=False /p:GenerateAppInstallerFile=True /p:AppInstallerUri=https://cdn.files.community/files/URI/ /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=Sideload /p:AppxPackageSigningEnabled=true /p:PackageCertificateKeyFile="$(caCertificate.secureFilePath)" /p:PackageCertificatePassword="$(signingCert.password)" /p:PackageCertificateThumbprint=""'
      maximumCpuCount: true

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**\bin\$(sideloadBuildConfiguration)\**'
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Sideload'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: 'Sideload'
      publishLocation: 'Container'

  - task: AzureFileCopy@4
    inputs:
      SourcePath: '$(build.artifactstagingdirectory)\AppxPackages\*'
      azureSubscription: 'azureconnection'
      Destination: 'AzureBlob'
      storage: 'filescommunity'
      ContainerName: 'files'
      BlobPrefix: 'URI'